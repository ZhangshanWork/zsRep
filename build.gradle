apply plugin: 'java'
apply plugin: 'idea'

//To use spring boot tasks to build and run the code
apply plugin: 'spring-boot'

ext {
    springVersion = '4.2.8.RELEASE'
    springSecurityVersion = '4.1.3.RELEASE'
    springBootVersion = '1.3.8.RELEASE'
    springRedisVersion = '1.7.4.RELEASE'
    springDataKeyvalueVersion = '1.1.4.RELEASE'
    springDataCommonsVersion = '1.12.4.RELEASE'
//    springElasticsearchVersion = '1.1.2.RELEASE'
    jacksonVersion = '2.7.4'
    jsonpathVersion = '2.2.0'
    logbackVersion = '1.1.7'
    slf4jVersion = '1.7.21'
    aspectjVersion = '1.8.9'
    mysqlConnectorVersion = '5.1.38'
    junitVersion = '4.12'
    jodaVersion = '2.9.3'
    mybatisVersion = '3.4.1'
    mybatisSpringVersion = '1.3.0'
    druidVersion = '1.0.18'
    jedisVersion = '2.8.1'

    httpclientVersion = '4.5.2'
    httpcoreVersion = '4.4.5'
    jschVersion = '1.9.4'
    commonsIoVersion = '2.4'
    commonsFileuploadVersion = '1.3.1'
    tikaCoreVersion = '1.4'
    aliyunOnsClientVersion = '1.2.5'
    aliyunOpenSearchClientVersion = '2.1.3'
    commonsPoolVersion = '2.4.2'
    apacheCommonsLang3Version = '3.4'
    apacheCommonsCollections4Version = '4.1'
    guavaVersion = '19.0'
    elasticsearchVersion = '2.1.0'
    jettyVersion='9.3.7.v20160115'

    jPushVersion = '3.2.10'
}

springBoot {
    mainClass = "im.vinci.VinciApplication"
}


buildscript {
    ext {
        mysqlConnectorVersion = '5.1.38'
        springBootVersion = '1.3.5.RELEASE'
    }

    repositories {
        jcenter()
        maven {
            url "http://download.java.net/maven/2"
        }
        maven {
            url 'http://repo.spring.io/plugins-release'
        }
    }

    dependencies {
        //classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.5'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:' + springBootVersion
        // The database driver for MySQL here
        classpath 'mysql:mysql-connector-java:' + mysqlConnectorVersion
        //To provide remote execution and file transfer features for project release
        classpath 'org.hidetake:gradle-ssh-plugin:0.3.11'
    }
}

def getVersion = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
def getBranch = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'sh','-c', 'git branch | grep "*"'
        standardOutput = stdout
    }
    def str = stdout.toString()
    def branch = str.substring(2,str.length()-1)
    if ("master".equals(branch)) {
        return ""
    } else if ("prerelease".equals(branch)) {
        return "-SNAPSHOT"
    } else {
        return "-"+branch
    }
}

sourceCompatibility = 1.8
version = getVersion()+getBranch()

repositories {
    jcenter()
    flatDir {
        dirs 'lib'
    }
}

dependencies {

    compile 'org.springframework:spring-jdbc:' + springVersion
    compile 'org.springframework:spring-webmvc:' + springVersion
    compile 'org.springframework:spring-context-support:' + springVersion
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.springframework:spring-aspects:$springVersion"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"

    compile name : 'taobao-sdk-java-auto_1448515620635-20151126'
    compile name : 'IKAnalyzer2012_u6'
    compile name : 'json-jena-1.0'
    compile name : 'Msc'
    compile name : 'json-lib-2.2.3-jdk15'
    compile name : 'microsoft-translator-java-api-0.7-SNAPSHOT'
    compile name : 'ansj_seg-5.0.0-all-in-one'

//    compile name : 'javax.mail-1.5.5'
//    compile name : 'jcommon-1.0.23'
//    compile name : 'jfreechart-1.0.19'

//	compile 'net.sf.ezmorph:ezmorph:1.0.6'
    compile 'com.hankcs:hanlp:portable-1.2.8'
    // http://mvnrepository.com/artifact/commons-collections/commons-collections
//    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
// http://mvnrepository.com/artifact/commons-beanutils/commons-beanutils
//    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.2'
    // http://mvnrepository.com/artifact/com.xiaoleilu/hutool
    compile group: 'com.xiaoleilu', name: 'hutool', version: '2.15.2'

// https://mvnrepository.com/artifact/cn.jpush.api/jpush-client
//    compile group: 'cn.jpush.api', name: 'jpush-client', version: '3.2.9'
// https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl
//    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'

    compile ("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
    }

    compile "org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion"
    compile "org.apache.tomcat.embed:tomcat-embed-core:8.0.36"
    compile "org.apache.tomcat.embed:tomcat-embed-el:8.0.36"
    compile "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.0.36"
    compile "org.apache.tomcat.embed:tomcat-embed-websocket:8.0.36"


//    compile 'org.springframework.security:spring-security-web:' + springSecurityVersion
//    compile 'org.springframework.security:spring-security-core:' + springSecurityVersion
//    compile 'org.springframework.security:spring-security-config:' + springSecurityVersion
    compile 'org.springframework.security:spring-security-crypto:' + springSecurityVersion

    // The library for Spring and Redis integration
    compile "org.springframework.data:spring-data-redis:$springRedisVersion"
    compile "org.springframework.data:spring-data-keyvalue:$springDataKeyvalueVersion"
    compile "org.springframework.data:spring-data-commons:$springDataCommonsVersion"
    // The java Redis integration library
//    compile "redis.clients:jedis:$jedisVersion"
    compile "com.whalin:Memcached-Java-Client:3.0.2"

    compile "org.apache.commons:commons-lang3:$apacheCommonsLang3Version"
    compile "org.apache.commons:commons-collections4:$apacheCommonsCollections4Version"
    compile "joda-time:joda-time:$jodaVersion"
//    compile 'commons-lang:commons-lang:2.6'
//    compile 'commons-codec:commons-codec:' + codecVersion
//    compile 'commons-collections:commons-collections:3.2.2'
//    compile 'commons-beanutils:commons-beanutils:1.9.2'
//    compile "commons-fileupload:commons-fileupload:$commonsFileuploadVersion"
    compile "commons-io:commons-io:$commonsIoVersion"

    // The library for Spring and Elasticsearch integration
//    compile 'org.springframework.data:spring-data-elasticsearch:' + springElasticsearchVersion
    compile "org.elasticsearch:elasticsearch:$elasticsearchVersion"

    //log相关
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    compile "org.slf4j:log4j-over-slf4j:$slf4jVersion"
    compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "ch.qos.logback:logback-core:$logbackVersion"
    compile 'org.codehaus.janino:janino:2.6.1'

    // The components used to handle http requests
    compile "org.apache.httpcomponents:httpclient:$httpclientVersion"
    compile "org.apache.httpcomponents:httpcore:$httpcoreVersion"
    compile "org.apache.httpcomponents:fluent-hc:$httpclientVersion"
    compile "com.mashape.unirest:unirest-java:1.4.9"

    // The database driver for MySQL here
//    compile 'mysql:mysql-connector-java:' + mysqlConnectorVersion
    // Tools used to create ORM for database
//    compile 'org.mybatis:mybatis:' + mybatisVersion
//    compile 'org.mybatis:mybatis-spring:' + mybatisSpringVersion
    // Datasource tools
//    compile "com.alibaba:druid:$druidVersion"
    // The object pooling library for redis
//    compile "org.apache.commons:commons-pool2:$commonsPoolVersion"

    //极光推送
//    compile "cn.jpush.api:jpush-client:$jPushVersion"

    // To automatically convert between json string and java object
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:$jacksonVersion"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:$jacksonVersion"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
    compile "com.alibaba:fastjson:1.2.17"


    compile ('com.googlecode.json-simple:json-simple:1.1.1') {
        exclude group:"junit"
    }

    testCompile "junit:junit:$junitVersion"
    testCompile "com.google.truth:truth:0.28"
    testCompile 'org.springframework:spring-test:' + springVersion
    testCompile 'org.springframework.boot:spring-boot-starter-test:' + springBootVersion

    testCompile 'com.jayway.jsonpath:json-path:' + jsonpathVersion
    testCompile 'com.jayway.jsonpath:json-path-assert:' + jsonpathVersion

//    compile "org.apache.tika:tika-core:$tikaCoreVersion"

    compile "com.google.guava:guava:$guavaVersion"
//    compile "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"


//    compile "com.aliyun.openservices:ons-client:$aliyunOnsClientVersion"
//    compile ("com.aliyun.opensearch:aliyun-sdk-opensearch:$aliyunOpenSearchClientVersion") {
//        exclude group:"junit"
//        exclude group:"org.slf4j"
//    }
//    compile group: 'com.aliyun.oss', name: 'aliyun-sdk-oss', version: '2.2.3.2-FOR-TFS'
//    //以下两个是RAM STS的调用sdk
//    compile "com.aliyun:aliyun-java-sdk-sts:2.1.6"
//    compile "com.aliyun:aliyun-java-sdk-core:2.1.7"


    compile 'com.cronutils:cron-utils:5.0.0'
}

bootRun {
    systemProperty 'spring.profiles.active', 'intg'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

configurations {
    sshAntTask
    all*.exclude group: 'commons-logging', module: 'commons-logging'
}

